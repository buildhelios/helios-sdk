/* <ALLOW_AUTO_DELETE DEPENDENCIES="TemplateModel" /> */
// this file was auto generated by @iyio/protogen - https://github.com/iyioio/common/tree/main/packages/protogen
import { z } from 'zod';
import { TemplateVisibilityScheme } from './TemplateVisibilityScheme';
import { TemplateContainerScheme } from './TemplateContainerScheme';

const __base__TemplateModelScheme=z.object({
    title:z.string().max(255).optional(),
    darkMode:z.boolean().optional(),
    linkColor:z.string().max(255).optional(),
    linkWeight:z.string().max(255).optional(),
    linkTextStyle:z.string().max(255).optional(),
    tid:z.string().max(255).optional(),
    marginTop:z.string().max(255).optional(),
    marginBottom:z.string().max(255).optional(),
    marginLeft:z.string().max(255).optional(),
    marginRight:z.string().max(255).optional(),
    paddingTop:z.string().max(255).optional(),
    paddingBottom:z.string().max(255).optional(),
    paddingLeft:z.string().max(255).optional(),
    paddingRight:z.string().max(255).optional(),
    foregroundColor:z.string().max(255).optional(),
    bgColor:z.string().max(255).optional(),
    fontSize:z.string().max(255).optional(),
    fontFamily:z.string().max(255).optional(),
    lineHeight:z.string().max(255).optional(),
    borderRadius:z.string().max(255).optional(),
    primaryColor:z.string().max(255).optional(),
    borderLeftWidth:z.string().max(255).optional(),
    borderLeftColor:z.string().max(255).optional(),
    borderLeftStyle:z.string().max(255).optional(),
    borderRightWidth:z.string().max(255).optional(),
    borderRightColor:z.string().max(255).optional(),
    borderRightStyle:z.string().max(255).optional(),
    borderTopWidth:z.string().max(255).optional(),
    borderTopColor:z.string().max(255).optional(),
    borderTopStyle:z.string().max(255).optional(),
    borderBottomWidth:z.string().max(255).optional(),
    borderBottomColor:z.string().max(255).optional(),
    borderBottomStyle:z.string().max(255).optional(),
    className:z.string().max(255).optional(),
    metadata:z.record(z.any()).optional(),
});
const __lazy__TemplateModelScheme=z.object({
    containers:z.lazy(()=>TemplateContainerScheme).array(),
    visibility:z.lazy(()=>TemplateVisibilityScheme).optional(),
});
export const TemplateModelScheme:(typeof __base__TemplateModelScheme)=__base__TemplateModelScheme.merge(__lazy__TemplateModelScheme) as any;
