/* <ALLOW_AUTO_DELETE DEPENDENCIES="User" /> */
// this file was auto generated by @iyio/protogen - https://github.com/iyioio/common/tree/main/packages/protogen
import { z } from 'zod';
import { FormSubmissionScheme } from './FormSubmissionScheme';
import { FileRecordScheme } from './FileRecordScheme';
import { MessageRecordScheme } from './MessageRecordScheme';
import { NotificationDeviceScheme } from './NotificationDeviceScheme';
import { UserActivityLogEntryScheme } from './UserActivityLogEntryScheme';

const __base__UserScheme=z.object({
    id:z.number().int(),
    created:z.number().optional(),
    name:z.string().max(255).optional(),
    firstName:z.string().max(255).optional(),
    lastName:z.string().max(255).optional(),
    email:z.string().email().optional(),
    phone:z.string().max(255).optional(),
    accountId:z.number().int().optional(),
    roles:z.string().max(255).array(),
    cognitoUserId:z.string().max(255).optional(),
    allowMarketingComms:z.boolean().optional().describe("If true the user would like to receive marketing communications, including emails and sms."),
    demoRequestedAt:z.number().optional().describe("The time at which the user requested a demo"),
    demoCompletedAt:z.number().optional(),
    websiteUrl:z.string().optional(),
    enableNewUserNotifications:z.boolean().optional(),
    enableScheduledAutomationNotifications:z.boolean().optional(),
    enableNewSegmentNotifications:z.boolean().optional(),
    enableNewMessageTemplateNotifications:z.boolean().optional(),
    enableNewAutomationNotifications:z.boolean().optional(),
    enableNewIntegrationNotifications:z.boolean().optional(),
    enablePlatformUpdateNotifications:z.boolean().optional(),
}).describe("A user within an organization");
const __lazy__UserScheme=z.object({
    activity:z.lazy(()=>UserActivityLogEntryScheme).array().optional(),
    notificationDevices:z.lazy(()=>NotificationDeviceScheme).array().optional(),
    messages:z.lazy(()=>MessageRecordScheme).array().optional(),
    files:z.lazy(()=>FileRecordScheme).array().optional(),
    formSubmissions:z.lazy(()=>FormSubmissionScheme).array().optional(),
});
export const UserScheme:(typeof __base__UserScheme)=__base__UserScheme.merge(__lazy__UserScheme) as any;
