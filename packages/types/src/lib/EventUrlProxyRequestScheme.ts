/* <ALLOW_AUTO_DELETE DEPENDENCIES="EventUrlProxyRequest" /> */
// this file was auto generated by @iyio/protogen - https://github.com/iyioio/common/tree/main/packages/protogen
import { z } from 'zod';

const __base__EventUrlProxyRequestScheme=z.object({
    url:z.string(),
    type:z.string().max(255).describe("The event type that should be tracked"),
    messageUuid:z.string().max(255).optional(),
    messageId:z.number().int().optional(),
    profileId:z.number().int().optional(),
    profileUuid:z.string().max(255).optional(),
    automationId:z.string().max(255).optional(),
    automationNodeId:z.string().max(255).optional(),
    evt:z.record(z.any()).optional().describe("Event record defaults."),
    evtLimit:z.number().int().optional().describe("The max number of events of the given event type that should be recorded for a given profile"),
    pipe:z.boolean().optional().describe("If true the contents of the URL should be fetched and returned inline with the request.\nIf false a redirect to the url param is returned."),
    urlB64ContentType:z.string().max(255).optional().describe("If defined the URL of the url proxy will be treated like raw b64 data and pipe as the return as the response of the request"),
}).describe("In-order for the request to be accepted a matching message record must be found using the messageId and messageUuid.\nAdditional matching types maybe added in the future");
const __lazy__EventUrlProxyRequestScheme=z.object({
});
export const EventUrlProxyRequestScheme:(typeof __base__EventUrlProxyRequestScheme)=__base__EventUrlProxyRequestScheme.merge(__lazy__EventUrlProxyRequestScheme) as any;
