/* <ALLOW_AUTO_DELETE DEPENDENCIES="EventRecord" /> */
// this file was autogenerated by @iyio/protogen - https://github.com/iyioio/common/packages/protogen
import { z } from 'zod';

const __base__EventRecordScheme=z.object({
    id:z.number().int(),
    profileId:z.number().int().optional().describe("Id of the user profile that triggered the event"),
    productId:z.number().int().optional().describe("Id of a product associated with the event"),
    productAltId:z.string().max(255).optional().describe("Alternate product id"),
    locationId:z.number().int().optional().describe("Id of a location associated with the event"),
    locationAltId:z.string().max(255).optional().describe("Alternate location id"),
    accountId:z.number().int().optional().describe("Id of the account associated with the event"),
    type:z.string().max(255).describe("The events type"),
    time:z.number().describe("A timestamp of when the event occurred"),
    data:z.record(z.any()).optional().describe("Custom event data"),
    longText:z.string().optional().describe("A large unindexed string associated with the event"),
    text:z.string().max(255).optional().describe("A short indexed string associated with the event"),
    tags:z.string().max(255).array().optional().describe("Array of tags that can be used to group events"),
    path:z.string().max(255).optional().describe("URL path where the event occurred"),
    host:z.string().max(255).optional().describe("Host / domain where the event occurred"),
    elem:z.string().max(255).optional().describe("Name of element associated with the event. Mostly used with elemView events"),
    classList:z.string().max(255).array().optional().describe("List of classes of the element target triggered the event"),
    x:z.number().optional().describe("Browser page x"),
    y:z.number().optional().describe("Browser page y"),
    sx:z.number().optional().describe("Browser scroll x"),
    sy:z.number().optional().describe("Browser scroll y"),
});
const __lazy__EventRecordScheme=z.object({
});
export const EventRecordScheme:(typeof __base__EventRecordScheme)=__base__EventRecordScheme.merge(__lazy__EventRecordScheme) as any;
export const EventRecordToAlias={
    "profileId": {
        "default": "i",
        "all": [
            "i"
        ]
    },
    "productId": {
        "default": "j",
        "all": [
            "j"
        ]
    },
    "productAltId": {
        "default": "ja",
        "all": [
            "ja"
        ]
    },
    "locationId": {
        "default": "l",
        "all": [
            "l"
        ]
    },
    "locationAltId": {
        "default": "la",
        "all": [
            "la"
        ]
    },
    "accountId": {
        "default": "a",
        "all": [
            "a"
        ]
    },
    "type": {
        "default": "t",
        "all": [
            "t"
        ]
    },
    "time": {
        "default": "o",
        "all": [
            "o"
        ]
    },
    "longText": {
        "default": "m",
        "all": [
            "m"
        ]
    },
    "text": {
        "default": "k",
        "all": [
            "k"
        ]
    },
    "tags": {
        "default": "g",
        "all": [
            "g"
        ]
    },
    "path": {
        "default": "p",
        "all": [
            "p"
        ]
    },
    "host": {
        "default": "h",
        "all": [
            "h"
        ]
    },
    "elem": {
        "default": "e",
        "all": [
            "e"
        ]
    },
    "classList": {
        "default": "c",
        "all": [
            "c"
        ]
    }
}
export const EventRecordFromAlias={
    "i": {
        "default": "profileId",
        "all": [
            "profileId"
        ]
    },
    "j": {
        "default": "productId",
        "all": [
            "productId"
        ]
    },
    "ja": {
        "default": "productAltId",
        "all": [
            "productAltId"
        ]
    },
    "l": {
        "default": "locationId",
        "all": [
            "locationId"
        ]
    },
    "la": {
        "default": "locationAltId",
        "all": [
            "locationAltId"
        ]
    },
    "a": {
        "default": "accountId",
        "all": [
            "accountId"
        ]
    },
    "t": {
        "default": "type",
        "all": [
            "type"
        ]
    },
    "o": {
        "default": "time",
        "all": [
            "time"
        ]
    },
    "m": {
        "default": "longText",
        "all": [
            "longText"
        ]
    },
    "k": {
        "default": "text",
        "all": [
            "text"
        ]
    },
    "g": {
        "default": "tags",
        "all": [
            "tags"
        ]
    },
    "p": {
        "default": "path",
        "all": [
            "path"
        ]
    },
    "h": {
        "default": "host",
        "all": [
            "host"
        ]
    },
    "e": {
        "default": "elem",
        "all": [
            "elem"
        ]
    },
    "c": {
        "default": "classList",
        "all": [
            "classList"
        ]
    }
}
